// a model of a popular desk toy

system dippingBird
{
    header
$
#include <cmath>
#include <iostream>
$

    stock waterCup : continuous
    {
        min = 0;
        max = 100000;
        initial = 100000;
    }

    stock beakTip : continuous
    {
        min = 0;
        max = 100;
        initial = 100;
    }

    stock waterOnHead : continuous
    {
        min = 0;
        max = 100;
        initial = 0;
    }

    stock upperFluid : continuous
    {
        min = 0;
        max = 100;
        initial = 0;
    
    }

    stock lowerFluid : continuous
    {
        min = 0;
        max = 100;
        initial = 100;
    }

    function Evaporation : continuous $ value = -waterOnHead; $ 
    function DeltaAngle : continuous $ if (lowerFluid ) value = -1; $

    var GasTemp : continuous
    {
        min = 0;
        max = 100;
        update = Evaporation;
    }

    var Angle : continuous
    {
        //math functions (sin(), cos(), sqrt()) throw a bit of a wrench in the works, huh?
        delta = DeltaAngle;
        min = -90;
        max = 90;
    }

    //this is a funny one. an if statement (if angle < X) would be very useful here
    //insight maker has a "state" object that coud be the basis for another type here. 
    function AbsorptionRate : continuous $ if (Angle < 10) value = 100; $
    flow Absorption : continuous
    {
        min = 0;
        max = 999;
        update = AbsorptionRate;
        source = waterCup;
        destination = beakTip;
    }

    function CapActionRate : continuous $ value = 10; $
    flow CapAction : continuous
    {
        min = 0;
        max = 10; //only so much throughput
        update = CapActionRate;
        source = beakTip;
        destination = waterOnHead;
    }

    function FluidFlowRate : continuous $ value = 1; $

    flow fluidFlow : continuous
    {
        min = -10; //can go negative
        max = 10;
        update = FluidFlowRate;
        source = beakTip;
        destination = waterOnHead;
    }
}
//************************************
simulation 
{
    setup
    {
        start = 0;
        end = 1000; 
        units = milliseconds;
    }

    systems
    {
        dippingBird large;
    }

    log dippy_log : 10
    {
        large.Angle    "Angle:        %10.3f";
        large.waterCup "Water in cup: %10.3f";
    }

    csv dippybird : 1
    {
        large.Angle " ";
        large.lowerFluid " ";
        large.upperFluid " ";
        large.waterCup " ";
        large.waterOnHead " ";
    }
}
